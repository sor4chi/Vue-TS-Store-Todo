{"version":3,"sources":["webpack:///./src/views/Commentary.vue?26ac","webpack:///./src/views/Commentary.vue","webpack:///./src/views/Commentary.vue?6e74","webpack:///./src/views/Commentary.vue?835a"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_12","render","_ctx","_cache","$props","$setup","$data","$options","__exports__"],"mappings":"yIAGMA,EAAa,CAAEC,MAAO,cACtBC,EAA0B,eAAmB,6wCAA4xC,IACz0CC,EAAc,CAClBD,GAGI,SAAUE,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQ,iBAAc,eAAoB,MAAOV,EAAYG,G,gBCPhD,iBAAgB,I,iCCI/B,MAAMQ,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASP,GAAQ,CAAC,YAAY,qBAE1E,gB,kCCTf,W","file":"js/chunk-83e78e1a.4d927b3b.js","sourcesContent":["import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-97292c2e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"commentary\" }\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<h1 data-v-97292c2e>Commentary</h1><h2 data-v-97292c2e>構成</h2><div class=\\\"compose_list\\\" data-v-97292c2e><a href=\\\"https://cli.vuejs.org/\\\" data-v-97292c2e>VueCLI</a><a href=\\\"https://jp.vuejs.org/v2/guide/typescript.html\\\" data-v-97292c2e>Typescript</a><a href=\\\"https://vuex.vuejs.org/ja/\\\" data-v-97292c2e>VueX</a><a href=\\\"https://vue-loader-v14.vuejs.org/ja/configurations/pre-processors.html\\\" data-v-97292c2e>scss</a><a href=\\\"https://github.com/vuejs/eslint-plugin-vue\\\" data-v-97292c2e>eslint</a><a href=\\\"https://github.com/meteorlxy/eslint-plugin-prettier-vue\\\" data-v-97292c2e>prittier</a></div><h2 data-v-97292c2e>説明</h2><h3 data-v-97292c2e>Todo</h3><p data-v-97292c2e> ToDoのデータをStoreに保持させてみました。（当然VueXのStoreは一度リロードすると消えますが） Form.vue（コンポーネント内）からemitを使わずにToDoを追加/削除(Stateを変更)しています。 Typescriptでは、Storeで型定義が必要になるので```types/index.d.ts```内でTodo型を自作/定義してます。 </p><h3 data-v-97292c2e>PersistedTodo</h3><p data-v-97292c2e> 基本的な構造はTodoのStoreと同じですが、VueXのプラグインvuex-persistedstateを使ってデータを永続化しています。 （今回はSessionStorageを使用しているので、セッションが切れたらorタブやブラウザを閉じたらリセットされます） </p><h3 data-v-97292c2e>Storeについて</h3><p data-v-97292c2e> 今回はStoreの機能のうち、state(初期データ）、mutations(Stateの変更メソッド)、plugins(vuex-persistedstate)を使用しています。 そのほかにもaction(Stateの変更メソッド（非同期処理も可能、基本それ以外はmutationに書く）)、getters(算出用の（Store内で使う）メソッド)があります。 </p>\", 10)\nconst _hoisted_12 = [\n  _hoisted_2\n]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_12))\n}","\nimport { defineComponent } from \"@vue/runtime-core\";\n\nexport default defineComponent({});\n","import { render } from \"./Commentary.vue?vue&type=template&id=97292c2e&scoped=true&ts=true\"\nimport script from \"./Commentary.vue?vue&type=script&lang=ts\"\nexport * from \"./Commentary.vue?vue&type=script&lang=ts\"\n\nimport \"./Commentary.vue?vue&type=style&index=0&id=97292c2e&scoped=true&lang=scss\"\n\nimport exportComponent from \"/Users/kawamurasorachi/Program/JavaScript/Vuejs/sample/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-97292c2e\"]])\n\nexport default __exports__","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/style-resources-loader/lib/index.js??ref--9-oneOf-1-4!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Commentary.vue?vue&type=style&index=0&id=97292c2e&scoped=true&lang=scss\""],"sourceRoot":""}